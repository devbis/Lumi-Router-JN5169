name: Build

on:
  push:

env:
  TARGET: LumiRouter.ota
  BUILD_DIR: build
  ARTIFACT_DIR: build/src
  SDK_DIR: sdk
  SDK_COMMIT: 78b9f41cedfdffef188ccc79fb47709274c354e6
  TOOLCHAIN_DIR: toolchain

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get toolchain
        run: |
          mkdir -p ${{github.workspace}}/${{ env.TOOLCHAIN_DIR }} && \
          wget https://github.com/openlumi/BA2-toolchain/releases/download/20201219/ba-toolchain-20201219.tar.bz2 -O - | tar -jx -C ${{github.workspace}}/${{ env.TOOLCHAIN_DIR }} && \
          mv ${{github.workspace}}/${{ env.TOOLCHAIN_DIR }}/ba-toolchain/* ${{github.workspace}}/${{ env.TOOLCHAIN_DIR }} && \
          rm -rf ${{github.workspace}}/${{ env.TOOLCHAIN_DIR }}/ba-toolchain
      - name: Get SDK
        run: |
          mkdir -p ${{github.workspace}}/${{ env.SDK_DIR }} && \
          cd ${{github.workspace}}/${{ env.SDK_DIR }} && \
          wget https://github.com/devbis/JN-SW-4170/archive/${{ env.SDK_COMMIT }}.zip -O sdk.zip && \
          unzip sdk.zip && \
          rm sdk.zip && \
          mv JN-SW-4170*/* . && \
          rm -rf JN-SW-4170* && \
          cd -
      - name: Install xmltodict and pycryptodome
        run: pip3 install xmltodict pycryptodome
      - name: Configure CMake
        id: configure
        run: |
          cmake -B ${{github.workspace}}/build -DTOOLCHAIN_PREFIX=$(realpath ${{github.workspace}}/${{ env.TOOLCHAIN_DIR }}) -DSDK_PREFIX=$(realpath ${{github.workspace}}/${{ env.SDK_DIR }})
      - name: Build
        id: build
        run: |
          cmake --build ${{github.workspace}}/build --target ${{ env.TARGET }} -j$(($(nproc)+1))
          rm ${{github.workspace}}/build/src/*tmp.bin
          echo "::set-output name=status::success"
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.2
        if: steps.make.outputs.status == 'success' && !cancelled()
        with:
          # Artifact name
          name: firmwares.zip
          # A file, directory or wildcard pattern that describes what to upload
          path: |
            ${{github.workspace}}/${{ env.ARTIFACT_DIR }}/*.bin
            ${{github.workspace}}/${{ env.ARTIFACT_DIR }}/*.ota

      - name: Generate release tag
        id: tag
        if: github.ref == 'refs/heads/master' && !cancelled()
        run: |
          echo "::set-output name=release_tag::${GITHUB_SHA::4}--$(date +"%Y%m%d-%H%M")"
          echo "::set-output name=status::success"

      - name: Create changelog
        id: create_changelog
        if: steps.tag.outputs.status == 'success' && !cancelled()
        uses: heinrichreimer/github-changelog-generator-action@v2.1.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          onlyLastTag: true
          stripHeaders: true

      - name: Upload firmware to release
        uses: softprops/action-gh-release@v1
        if: steps.tag.outputs.status == 'success' && !cancelled()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.release_tag }}
          body: ${{ steps.create_changelog.outputs.changelog }}
          files: |
            ${{ env.ARTIFACT_DIR }}/*.bin
            ${{ env.ARTIFACT_DIR }}/*.ota
          prerelease: true
